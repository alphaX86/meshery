// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type ServiceMesh interface {
	IsServiceMesh()
}

type AuthorizationPolicy struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type Cluster struct {
	Node      []*Node      `json:"node"`
	Namespace []*Namespace `json:"namespace"`
}

type Deployment struct {
	ID       string `json:"id"`
	Parentid string `json:"parentid"`
	Name     string `json:"name"`
	Pods     []*Pod `json:"pods"`
}

type DestinationRule struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type EnvoyFilter struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type Gateway struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type Istio struct {
	Name                   string                   `json:"Name"`
	Type                   string                   `json:"Type"`
	Version                string                   `json:"Version"`
	VirtualServices        []*VirtualService        `json:"VirtualServices"`
	Sidecars               []*Sidecar               `json:"Sidecars"`
	WorkloadEntries        []*WorkloadEntry         `json:"WorkloadEntries"`
	AuthorizationPolicies  []*AuthorizationPolicy   `json:"AuthorizationPolicies"`
	DestinationRules       []*DestinationRule       `json:"DestinationRules"`
	EnvoyFilters           []*EnvoyFilter           `json:"EnvoyFilters"`
	Gateways               []*Gateway               `json:"Gateways"`
	PeerAuthentications    []*PeerAuthentication    `json:"PeerAuthentications"`
	RequestAuthentications []*RequestAuthentication `json:"RequestAuthentications"`
	ServiceEntries         []*ServiceEntry          `json:"ServiceEntries"`
	WorkloadGroups         []*WorkloadGroup         `json:"WorkloadGroups"`
}

func (Istio) IsServiceMesh() {}

type Namespace struct {
	ID          string        `json:"id"`
	Parentid    string        `json:"parentid"`
	Name        string        `json:"name"`
	Deployments []*Deployment `json:"deployments"`
	Services    []*Service    `json:"services"`
}

type Node struct {
	ID       string `json:"id"`
	Parentid string `json:"parentid"`
	Name     string `json:"name"`
	Pods     []*Pod `json:"pods"`
	Istio    *Istio `json:"istio"`
}

type PeerAuthentication struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type Pod struct {
	ID       string `json:"id"`
	Parentid string `json:"parentid"`
	Name     string `json:"name"`
}

type RequestAuthentication struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type Service struct {
	ID          string    `json:"id"`
	Parentid    string    `json:"parentid"`
	Name        *string   `json:"name"`
	Deployments []*string `json:"deployments"`
}

type ServiceEntry struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type Sidecar struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type VirtualService struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}

type WorkloadEntry struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type WorkloadGroup struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Namespace *Namespace `json:"namespace"`
}
